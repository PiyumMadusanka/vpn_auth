#!/bin/bash
# This script generates client credentials and an
# OpenVPN configuration file.

if [ $(id -u) != 0 ]; then
    echo "You must be root"
    echo "Elevating privalege"
    sudo "$0" "$@"
    exit 0
fi

if [ ! "$1" ]; then
    echo -n "Enter client name: "
    read CLIENT
else
    CLIENT=$1
fi

if [ -z "$CLIENT" ]; then
    echo "You must enter a client name"
    exit 1
fi

PKI=/etc/easy-rsa/pki
WD=$(pwd)

if [ -f "$PKI/private/$CLIENT.key" ]; then
    echo "'$CLIENT' already has a key!"
    ls -lh $PKI/private/$CLIENT.key
    exit 1
fi

EASYRSA_VARS_FILE=/etc/easy-rsa/vars
cd $PKI/..

echo "Generating request for '$CLIENT'"
easyrsa gen-req $CLIENT nopass

echo "Signing request for '$CLIENT'"
easyrsa sign-req client $CLIENT

cd $WD

TEMPLATE=/etc/openvpn/client_template.conf
cp $TEMPLATE $WD/$CLIENT.ovpn
OVPN=$WD/$CLIENT.ovpn
CA=/etc/openvpn/server/ecc/ca.crt
CRT=$PKI/issued/$CLIENT.crt
KEY=$PKI/private/$CLIENT.key
TC=/etc/openvpn/server/ecc/tc.key

if [ ! -f $CA ] || [ ! -f $CRT ] || [ ! -f $KEY ] || [ ! -f $TC ]; then
    ls -lh $CA $CRT $KEY $TC
    echo "ERROR: missing credentials; exiting"
    exit 1
fi

echo -e "\n<ca>" >> $OVPN
cat $CA >> $OVPN
echo "</ca>" >> $OVPN

echo -e "\n<cert>" >> $OVPN
cat $CRT >> $OVPN
echo "</cert>" >> $OVPN

echo -e "\n<key>" >> $OVPN
cat $KEY >> $OVPN
echo "</key>" >> $OVPN

echo -e "\n<tls-crypt>" >> $OVPN
cat $TC >> $OVPN
echo "</tls-crypt>" >> $OVPN

HOSTNAME=$(hostname)
T=$(date -Is)
echo -e "\n# Configuration for $CLIENT generated by $HOSTNAME at $T\n" >> $OVPN

echo -n "Configuration for '$CLIENT' written to "
ls $OVPN

echo -e "\nSetting password for '$CLIENT'"

if [ -f /etc/openvpn/server/auth/$CLIENT.password ]; then
    echo "ERROR: $CLIENT.password already exists; exiting"
    exit 1
fi

echo -e "Here is a random (256 bit entropy) string you could use: \n"
openssl rand -base64 32
echo ""

/etc/openvpn/server/auth/hash_pw.py $CLIENT

echo -e "\nVPN account for '$CLIENT' created successfully\n"


exit 0

